name: 🧪 Excel MCP Server CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - performance
          - e2e

jobs:
  # Job 1: Code Quality and Linting
  quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔨 Build Project
        run: npm run build

      - name: 🔍 Type Check
        run: npm run lint

  # Job 2: Unit Tests Matrix
  unit-tests:
    name: 🧪 Unit Tests
    needs: quality
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20, 22]
        exclude:
          # Reduce matrix size for faster builds
          - os: macos-latest
            node-version: 18
          - os: windows-latest
            node-version: 18
    runs-on: ${{ matrix.os }}
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔨 Build Project
        run: npm run build

      - name: 🧪 Run Unit Tests
        run: npm run test:unit
        env:
          NODE_ENV: test
          CI: true

      - name: 📊 Upload Coverage (Ubuntu + Node 20 only)
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unit-tests
          name: unit-tests-coverage

  # Job 3: Integration Tests
  integration-tests:
    name: 🔄 Integration Tests
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔨 Build Project
        run: npm run build

      - name: 🔄 Run Integration Tests
        run: npm run test:integration
        env:
          NODE_ENV: test
          CI: true
          # Increase timeout for integration tests
          JEST_TIMEOUT: 60000

      - name: 📊 Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: integration-tests
          name: integration-tests-coverage

  # Job 4: Performance Tests
  performance-tests:
    name: ⚡ Performance Tests
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔨 Build Project
        run: npm run build

      - name: ⚡ Run Performance Tests
        run: npm run test:performance
        env:
          NODE_ENV: test
          CI: true
          # Extended timeout for performance tests
          JEST_TIMEOUT: 120000

      - name: 📈 Upload Performance Results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: tests/temp/performance-*.json
          retention-days: 30

  # Job 5: E2E Tests with Real AI Providers (Optional)
  e2e-tests:
    name: 🎯 E2E Tests
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'test-e2e')
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔨 Build Project
        run: npm run build

      - name: 🎯 Run E2E Tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
          CI: true
          # Use test API keys if available
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY_TEST }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY_TEST }}

  # Job 6: Security Audit
  security:
    name: 🛡️ Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 🛡️ Run Security Audit
        run: npm audit --audit-level=moderate

      - name: 🔒 Check for Known Vulnerabilities
        run: npx audit-ci --moderate

  # Job 7: Test Summary and Results
  test-summary:
    name: 📋 Test Summary
    needs: [unit-tests, integration-tests, performance-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📊 Generate Test Summary
        run: |
          echo "## 🧪 Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Integration Tests | ${{ needs.integration-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance Tests | ${{ needs.performance-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.unit-tests.result }}" != "success" ] || [ "${{ needs.integration-tests.result }}" != "success" ]; then
            echo "## ❌ Some tests failed!" >> $GITHUB_STEP_SUMMARY
            echo "Please check the individual job logs for details." >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "## ✅ All tests passed!" >> $GITHUB_STEP_SUMMARY
            echo "Great job! The Excel MCP Server is working correctly." >> $GITHUB_STEP_SUMMARY
          fi

  # Job 8: Deploy Test Results (for main branch)
  deploy-results:
    name: 🚀 Deploy Test Results
    needs: [test-summary]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 📊 Generate Coverage Report
        run: npm run test:coverage

      - name: 🚀 Deploy to GitHub Pages (Coverage Report)
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage/lcov-report
          destination_dir: coverage

# Workflow configuration
env:
  # Fail fast on first error
  CI: true
  # Node.js memory limit for large tests
  NODE_OPTIONS: '--max-old-space-size=4096'

# Permissions needed for the workflow
permissions:
  contents: read
  pages: write
  id-token: write
  checks: write
  pull-requests: write